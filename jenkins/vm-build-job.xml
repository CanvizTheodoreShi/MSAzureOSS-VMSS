<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>{insert-repository-url}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if [ ! -f &quot;${WORKSPACE}/bin/packer&quot; ]; then
    echo &quot;MyBuild: Install packer&quot;

    cd /tmp
        wget https://releases.hashicorp.com/packer/1.1.3/packer_1.1.3_linux_amd64.zip
    unzip packer_1.1.3_linux_amd64.zip -d &quot;${WORKSPACE}/bin&quot;
fi

cd &quot;${WORKSPACE}&quot;

echo &quot;MyBuild: Build image&quot;
# ./bin/packer build ./packer/ubuntu.json

cd &quot;${WORKSPACE}&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ ! -f &quot;${WORKSPACE}/bin/terraform&quot; ]; then
    echo &quot;MyBuild: Install terraform&quot;

    cd /tmp
        wget https://releases.hashicorp.com/terraform/0.11.1/terraform_0.11.1_linux_amd64.zip
    unzip terraform_0.11.1_linux_amd64.zip -d &quot;${WORKSPACE}/bin&quot;
fi

if [ ! -f ~/.ssh/id_rsa.pub ]; then
    echo &quot;MyBuild: Create SSH public and private key pair&quot;
    ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -N &apos;&apos;
fi

echo &quot;MyBuild: Provision VMSS with packer image&quot;
cd &quot;${WORKSPACE}/terraform&quot;
../bin/terraform get
../bin/terraform init
../bin/terraform apply -auto-approve -var &quot;location=${ARM_LOCATION}&quot; -var &quot;resource_group_name=${ARM_RESOURCE_GROUP}&quot; -var &quot;image_resource_group_name=${ARM_IMAGE_RESOURCE_GROUP}&quot; -var &quot;image_name=${ARM_IMAGE_NAME}&quot;

cd &quot;${WORKSPACE}&quot;
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@2.1.5">
      <info>
        <propertiesContent>ARM_SUBSCRIPTION_ID={insert-subscription-id}
ARM_TENANT_ID={insert-tenant-id}
ARM_CLIENT_ID={insert-client-id}
ARM_CLIENT_SECRET={insert-client-secret}
ARM_RESOURCE_GROUP={insert-resource-group}
ARM_LOCATION={insert-location}
ARM_IMAGE_RESOURCE_GROUP={insert-image-resource-group}
ARM_IMAGE_NAME={insert-image-name}</propertiesContent>
        <secureGroovyScript plugin="script-security@1.39">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>